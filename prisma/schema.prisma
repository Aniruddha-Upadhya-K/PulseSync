generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider     = "mysql"
    url          = env("DATABASE_URL")
    relationMode = "prisma"
}

model Account {
    id                String  @id @default(cuid())
    userId            String
    type              String
    provider          String
    providerAccountId String
    refresh_token     String? @db.Text
    access_token      String? @db.Text
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String? @db.Text
    session_state     String?
    user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
    @@index([userId])
}

model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@index([userId])
}

model User {
    id            String    @id @default(cuid())
    name          String?
    email         String?   @unique
    emailVerified DateTime?
    image         String?
    accounts      Account[]
    sessions      Session[]

    //user personal info
    age                  Int?
    gender               Gender?
    weight               Int?
    height               Int?
    previousHealthIssues String?
    medication           String?

    //Status
    isProfileComplete Boolean? @default(false)

    //Chat
    chatid String?
    chat   Chats[]
}

model VerificationToken {
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}

model Chats {
    id          String  @id @default(cuid())
    userid      String  @unique
    user        User    @relation(fields: [userid], references: [id])
    chatHistory String?  @db.LongText
    isComplete  Boolean @default(false)
}

enum Gender {
    Male
    Female
    Other
}
